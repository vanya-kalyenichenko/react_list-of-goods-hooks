{"version":3,"sources":["App.tsx","Components/ComponentItem/ComponentItem.tsx","Components/ComponentList/ComponentList.tsx","index.tsx"],"names":["SortType","ComponentItem","good","ComponentList","goods","map","goodsFromServer","App","reversed","visibleGoods","useState","reverse","setReverse","sortField","setSortField","hasResetButton","handleSort","field","sort","good1","good2","abc","localeCompare","length","className","type","cn","onClick","reset","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,qECbQC,EAAiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC5C,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAAiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC5C,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,GACDA,SFNAI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,K,UAAAA,E,gBAAAA,E,UAAAA,M,KAME,IAAMO,EAAM,WACjB,IAMuBC,EANnBC,EAAY,UAAOH,GACvB,EAA8BI,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAiBJ,GAAWE,EAE5BG,EAAa,SAACC,GAAD,OAAmB,kBAAMH,EAAaG,KA8BzD,OAvBIJ,GACFJ,EAAaS,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAKb,EAASqB,IACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKpB,EAASuB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKVV,IACHJ,EAAY,UAAOH,IAGjBK,GACFF,EAAaE,UAIb,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYb,IAAcb,EAASqB,MAErCM,QAASX,EAAWhB,EAASqB,KAL/B,iCAUA,wBACEI,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYb,IAAcb,EAASuB,SAErCI,QAASX,EAAWhB,EAASuB,QAL/B,4BAUA,wBACEE,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaf,IAEfgB,SAzDenB,EAyDQG,EAzDc,kBAAMC,GAAYJ,KAoDzD,qBAUCO,GAEG,wBACEU,KAAK,SACLD,UAAU,4BACVG,QAlEQ,WAClBf,GAAW,GACXE,EAAad,EAAS4B,QA6Dd,sBAWN,cAAC,EAAD,CAAexB,MAAOK,QGxG5BoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bfb062a7.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { useState } from 'react';\nimport { ComponentList } from './Components/ComponentList/ComponentList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  abc = 'abc',\n  length = 'length',\n  reset = '',\n}\n\nexport const App = () => {\n  let visibleGoods = [...goodsFromServer];\n  const [reverse, setReverse] = useState(false);\n  const [sortField, setSortField] = useState('');\n  const hasResetButton = reverse || sortField;\n\n  const handleSort = (field: string) => () => setSortField(field);\n  const handleReverse = (reversed: boolean) => () => setReverse(!reversed);\n  const handleReset = () => {\n    setReverse(false);\n    setSortField(SortType.reset);\n  };\n\n  if (sortField) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.abc:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (!sortField) {\n    visibleGoods = [...goodsFromServer];\n  }\n\n  if (reverse) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortType.abc,\n          })}\n          onClick={handleSort(SortType.abc)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortType.length,\n          })}\n          onClick={handleSort(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !reverse,\n          })}\n          onClick={handleReverse(reverse)}\n        >\n          Reverse\n        </button>\n\n        {hasResetButton\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n\n      </div>\n\n      <ComponentList goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  good: string\n}\n\nexport const ComponentItem: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import React from 'react';\nimport { ComponentItem } from '../ComponentItem/ComponentItem';\n\ninterface Props {\n  goods: string[];\n}\n\nexport const ComponentList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <ComponentItem\n        good={good}\n        key={good}\n      />\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}